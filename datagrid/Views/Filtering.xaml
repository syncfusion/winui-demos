<Page
    x:Class="DataGrid.Filtering"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="using:Syncfusion.DemosCommon.WinUI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:DataGrid"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:dataGrid="using:Syncfusion.UI.Xaml.DataGrid"
    Background="Transparent"
    mc:Ignorable="d">
    <Page.Resources>
        <local:EmployeeViewModel x:Key="employeeViewModel"/>
        <local:TextFilterConditionConverter x:Key="textFilterConditionConverter" />
        <local:NumericFilterConditionConverter x:Key="numericFilterConditionConverter" />
        <local:FilterConditionVisibilityConverter x:Key="filterConditionVisibilityConverter"/>
    </Page.Resources>
    <Grid  x:Name="Grid" DataContext="{StaticResource employeeViewModel}" >
        <ScrollViewer
            VerticalScrollBarVisibility="Auto"
            VerticalScrollMode="Auto">
            <common:DemoLayout x:Name="Example1" HeaderText="The DataGrid control provides a built-in delegate filter to achieve view filtering.">
                <common:DemoLayout.Example>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Margin="10,0,0,10">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="0,0,0,5" VerticalAlignment="Center" FontSize="16" FontWeight="Normal" Text="Show rows where :" />
                                <ComboBox x:Name="columnOption" Margin="5,0,5,0" Width="182"  SelectedIndex="0" SelectionChanged="FilterOptionChanged" >
                                    <ComboBoxItem>All Columns</ComboBoxItem>
                                    <ComboBoxItem>Employee ID</ComboBoxItem>
                                    <ComboBoxItem>Salary</ComboBoxItem>
                                    <ComboBoxItem>Name</ComboBoxItem>
                                    <ComboBoxItem>Title</ComboBoxItem>
                                    <ComboBoxItem>Age</ComboBoxItem>
                                    <ComboBoxItem>Designation</ComboBoxItem>
                                    <ComboBoxItem>Marital Status</ComboBoxItem>
                                    <ComboBoxItem>Location</ComboBoxItem>
                                    <ComboBoxItem>Gender</ComboBoxItem>
                                </ComboBox>
                                <ComboBox x:Name="stringCondition" Margin="5,0,5,0" Width="200" SelectedIndex="0" 
                                          Visibility="{Binding SelectedIndex,ElementName=columnOption, Converter={StaticResource textFilterConditionConverter}}" 
                                          SelectionChanged="FilterConditionChanged">
                                    <ComboBoxItem>Contains</ComboBoxItem>
                                    <ComboBoxItem>Starts With</ComboBoxItem>
                                    <ComboBoxItem>Ends With</ComboBoxItem>
                                </ComboBox>
                                <ComboBox x:Name="numericCondition" Margin="5,0,5,0" Width="200" SelectedIndex="0" 
                                          Visibility="{Binding SelectedIndex,ElementName=columnOption,Converter={StaticResource numericFilterConditionConverter}}"
                                          SelectionChanged="FilterConditionChanged">
                                    <ComboBoxItem>Equals</ComboBoxItem>
                                    <ComboBoxItem>Greater Than</ComboBoxItem>
                                    <ComboBoxItem>Less Than</ComboBoxItem>
                                    <ComboBoxItem>Not Equals</ComboBoxItem>
                                </ComboBox>
                                <TextBox x:Name="filterTextBox" Margin="5,0,0,0" Width="182" VerticalAlignment="Top" TextChanged="FilterBox_TextChanged" />
                            </StackPanel>
                        </Grid>

                        <dataGrid:SfDataGrid
                        Grid.Row="1"
                        x:Name="sfDataGrid"
                        Height="520"
                        Width="Auto"
                        HorizontalAlignment="Left"
                        AutoGenerateColumns="False"
                        ColumnWidthMode="Auto"
                            ItemsSource="{Binding Employees}"
                        NavigationMode="Row">
                            <dataGrid:SfDataGrid.Columns>
                                <dataGrid:GridNumericColumn TextAlignment="Right" HeaderText="Employee ID" MappingName="EmployeeID" ImmediateUpdateColumnFilter="True"/>
                                <dataGrid:GridTextColumn MappingName="Name" ImmediateUpdateColumnFilter="True" />
                                <dataGrid:GridTextColumn MappingName="Gender" ImmediateUpdateColumnFilter="True"/>
                                <dataGrid:GridNumericColumn MappingName="Age" />
                                <dataGrid:GridTextColumn MappingName="Designation" />
                                <dataGrid:GridTextColumn MappingName="Title" ImmediateUpdateColumnFilter="True"/>
                                <dataGrid:GridNumericColumn  MappingName="Salary" NumberFormatter="{Binding SystemCurrency,Source={StaticResource employeeViewModel}}"
                                TextAlignment="Right"
                                ImmediateUpdateColumnFilter="True"/>
                                <dataGrid:GridTextColumn MappingName="MaritalStatus" HeaderText="Marital Status" />
                                <dataGrid:GridTextColumn MappingName="Location" HeaderText="Location" />
                            </dataGrid:SfDataGrid.Columns>
                    </dataGrid:SfDataGrid>
                    </Grid>
                </common:DemoLayout.Example>
                <common:DemoLayout.Xaml>
                    <x:String xml:space="preserve">
    &lt;dataGrid:SfDataGrid x:Name=&quot;sfDataGrid&quot;
                              Height=&quot;500&quot;
                              Width=&quot;Auto&quot;
                              HorizontalAlignment=&quot;Left&quot;
                              ColumnWidthMode=&quot;AutoLastColumnFill&quot;
                              ItemsSource=&quot;{Binding Employees}&quot;
                              AutoGenerateColumns=&quot;True&quot;
                              NavigationMode=&quot;Row&quot;&gt;
    &lt;/dataGrid:SfDataGrid&gt; 
                </x:String>
                </common:DemoLayout.Xaml>
                <common:DemoLayout.CSharp>
                    <x:String xml:space="preserve">
    // C# Code behind 
    public sealed partial class Filtering : Page, IDisposable
    { 
        EmployeeViewModel viewModel;
        public Filtering()
        {
            this.InitializeComponent();
            viewModel = this.Grid.DataContext as EmployeeViewModel;
            this.Loaded += FilteringLoaded;
        }
        
        private void FilteringLoaded(object sender, RoutedEventArgs e)
        {
            if(viewModel != null)
              viewModel.filterChanged = OnFilterChanged;
        }

       
        private void OnFilterChanged()
        {
            if (this.sfDataGrid.View != null)
            {
                this.sfDataGrid.View.Filter = viewModel.FilerRecords;
                this.sfDataGrid.View.RefreshFilter();
            }
        }
        
         private void FilterBox_TextChanged(object sender, TextChangedEventArgs e)
        {
            TextBox textBox = sender as TextBox;
            viewModel.FilterText = textBox.Text;
            if (viewModel.filterChanged != null)
                viewModel.filterChanged();
        }
    }                              
      
    public class EmployeeViewModel : INotifyPropertyChanged
    {
        public EmployeeViewModel()
        {         
        }                
        internal delegate void FilterChanged();
        internal FilterChanged filterChanged;
                        
        public bool FilterRecords(object o)
        {
         string filterText = filterTextBox.Text;
         var item = o as Employee;
         if (item != null)
         {
            if (item.EmployeeID.Equals(filterText))
            return true;
         }
         return false;
        }
    }         
                    </x:String>
                </common:DemoLayout.CSharp>
            </common:DemoLayout>
        </ScrollViewer>
    </Grid>
</Page>
