<Page
    x:Class="DataGrid.UnboundRows"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DataGrid"    
    xmlns:common="using:Syncfusion.DemosCommon.WinUI"
    xmlns:core="using:Syncfusion.UI.Xaml.Core"
    xmlns:dataGrid="using:Syncfusion.UI.Xaml.DataGrid"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="Transparent">
    <Page.Resources>
        <local:SalesViewModel x:Key="salesViewModel"/>
        <core:StringFormatConverter x:Key="stringFormatConverter" />
        <DataTemplate x:Key="UnboundCellTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="205"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="1" Text="{Binding}"  VerticalAlignment="Center" HorizontalAlignment="Left" Padding="10"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="UnboundRowCellTemplate">
            <TextBlock Text="{Binding Converter={StaticResource stringFormatConverter}, ConverterParameter='{}{0:C}'}" TextWrapping="Wrap"  VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Right" Padding="0,5,5,0"/>
        </DataTemplate>
        <DataTemplate x:Key="UnboundRowCellPercentTemplate">
            <TextBlock Text="{Binding Converter={StaticResource stringFormatConverter}, ConverterParameter='{}{0:0.0%}'}" TextWrapping="Wrap"   VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Right" Padding="0,5,5,0"/>
        </DataTemplate>
    </Page.Resources>
    <StackPanel DataContext="{StaticResource salesViewModel}">
        <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto">
            <common:DemoLayout x:Name="Example1" HeaderText="The DataGrid control provides support to add additional rows at its top and bottom that are not bound with data objects from the underlying data source.">
                <common:DemoLayout.Example>
                    <dataGrid:SfDataGrid 
                                   x:Name="sfDataGrid" 
                                   Height="500"
                                   Width="Auto"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Top"
                                   AutoGenerateColumns="False"
                                   AllowEditing="True"  
                                   ColumnWidthMode="Auto" 
                                   LiveDataUpdateMode="AllowSummaryUpdate"
                                   NavigationMode="Cell"
                                   SelectionMode="Extended"
                                   ItemsSource="{Binding YearlySales}">
                        <dataGrid:SfDataGrid.UnboundRows>
                            <dataGrid:GridUnboundRow Position="Top" ShowBelowSummary="False"/>
                            <dataGrid:GridUnboundRow Position="Bottom" ShowBelowSummary="True"/>
                            <dataGrid:GridUnboundRow Position="Bottom" ShowBelowSummary="True"/>
                        </dataGrid:SfDataGrid.UnboundRows>
                        <dataGrid:SfDataGrid.Columns>
                            <dataGrid:GridTextColumn MappingName="Name" Width="180" />
                            <dataGrid:GridNumericColumn MappingName="QS1" NumberFormatter="{Binding SystemCurrency,Source={StaticResource salesViewModel}}" HeaderText="Sales in Q1" TextAlignment="Right" />
                            <dataGrid:GridNumericColumn MappingName="QS2" NumberFormatter="{Binding SystemCurrency,Source={StaticResource salesViewModel}}" HeaderText="Sales in Q2" TextAlignment="Right" />
                            <dataGrid:GridNumericColumn MappingName="QS3" NumberFormatter="{Binding SystemCurrency,Source={StaticResource salesViewModel}}" HeaderText="Sales in Q3" TextAlignment="Right" />
                            <dataGrid:GridNumericColumn MappingName="QS4" NumberFormatter="{Binding SystemCurrency,Source={StaticResource salesViewModel}}" HeaderText="Sales in Q4" TextAlignment="Right" />
                            <dataGrid:GridNumericColumn MappingName="Total" NumberFormatter="{Binding SystemCurrency,Source={StaticResource salesViewModel}}" HeaderText="Total Sales in Year" TextAlignment="Right" />
                            <dataGrid:GridNumericColumn MappingName="Year" TextAlignment="Right"/>
                        </dataGrid:SfDataGrid.Columns>
                    </dataGrid:SfDataGrid>
                </common:DemoLayout.Example>
                <common:DemoLayout.Xaml>
                    <x:String xml:space="preserve">
     &lt;dataGrid:SfDataGrid 
               x:Name=&quot;sfDataGrid&quot;
               Height=&quot;450&quot;
               Width=&quot;Auto&quot;
               HorizontalAlignment=&quot;Left&quot;
               VerticalAlignment=&quot;Top&quot;
               AutoGenerateColumns=&quot;True&quot;
               AllowEditing=&quot;True&quot; 
               ColumnWidthMode=&quot;AutoLastColumnFill&quot; 
               LiveDataUpdateMode=&quot;AllowSummaryUpdate&quot;
               NavigationMode=&quot;Cell&quot;
               SelectionMode=&quot;Extended&quot;
               ItemsSource=&quot;{Binding YearlySales}&quot;&gt;
        &lt;dataGrid:SfDataGrid.UnboundRows &gt;
            &lt;dataGrid:GridUnboundRow Position=&quot;Top&quot; ShowBelowSummary=&quot;False&quot;/&gt;
            &lt;dataGrid:GridUnboundRow Position=&quot;Bottom&quot; ShowBelowSummary=&quot;True&quot;/&gt;
            &lt;dataGrid:GridUnboundRow Position=&quot;Bottom&quot; ShowBelowSummary=&quot;True&quot;/&gt;
        &lt;/dataGrid:SfDataGrid.UnboundRows &gt;
     &lt;/dataGrid:SfDataGrid &gt;
                </x:String>
                </common:DemoLayout.Xaml>
                <common:DemoLayout.CSharp>
                    <x:String xml:space="preserve"> 
     //C# code behind
                        
     private void SfDataGrid_QueryUnboundRow(object sender, Syncfusion.UI.Xaml.DataGrid.GridUnboundRowEventsArgs e)
     {
         if (!(totalSales.ContainsKey(e.Column.MappingName)))
             return;
     
         if (e.UnboundAction == UnboundActions.QueryData)
         {
             if (e.RowColumnIndex.RowIndex == 1)
             {
                 if (e.RowColumnIndex.ColumnIndex == 0)
                 {
                     e.Value = &quot;Total Sales By Month&quot;;
                     e.CellTemplate = this.Resources[&quot;UnboundCellTemplate&quot;] as DataTemplate;
                 }
                 else
                 {
                     e.Value = totalSales[e.Column.MappingName];
                     e.CellTemplate = this.Resources[&quot;UnboundRowCellTemplate&quot;] as DataTemplate;
                 }
             }
             else if (e.GridUnboundRow.UnboundRowIndex == 0 &amp;&amp; e.GridUnboundRow.Position == UnboundRowsPosition.Bottom &amp;&amp; e.GridUnboundRow.ShowBelowSummary == true)
             {
                 if (e.RowColumnIndex.ColumnIndex == 0)
                 {
                     e.Value = &quot;Summary of Selected Rows&quot;;
                     e.CellTemplate = this.Resources[&quot;UnboundCellTemplate&quot;] as DataTemplate;
                 }
                 else
                 {
                     if (!(totalSelectedSales.ContainsKey(e.Column.MappingName)))
                         return;
     
                     e.Value = totalSelectedSales[e.Column.MappingName];
                     e.CellTemplate = this.Resources[&quot;UnboundRowCellTemplate&quot;] as DataTemplate;
                 }
             }
     
             else if (e.GridUnboundRow.UnboundRowIndex == 1 &amp;&amp; e.GridUnboundRow.Position == UnboundRowsPosition.Bottom &amp;&amp; e.GridUnboundRow.ShowBelowSummary == true)
             {
                 int count = this.sfDataGrid.SelectedItems.Count;
                 if (e.RowColumnIndex.ColumnIndex == 0)
                 {
                     e.Value = &quot;Average of Selected Rows&quot;;
                     e.CellTemplate = this.Resources[&quot;UnboundCellTemplate&quot;] as DataTemplate;
                 }
                 else
                 {
                     if (!(totalSelectedSales.ContainsKey(e.Column.MappingName)))
                         return;
     
                     e.Value = (totalSelectedSales[e.Column.MappingName] / count);
                     e.Value = double.IsNaN((double)e.Value) ? 0.0 : e.Value;
                     e.CellTemplate = this.Resources[&quot;UnboundRowCellTemplate&quot;] as DataTemplate;
     
                     if (e.RowColumnIndex.ColumnIndex > 7)
                         e.CellTemplate = null;
                 }
             }
             e.Handled = true;
         }
     }
                        </x:String>

                </common:DemoLayout.CSharp>
            </common:DemoLayout>
        </ScrollViewer>
    </StackPanel>
</Page>
