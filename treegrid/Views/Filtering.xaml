<Page
    x:Class="TreeGrid.Filtering"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="using:Syncfusion.DemosCommon.WinUI"
    xmlns:enumextension="using:Syncfusion.DemosCommon.WinUI"
    xmlns:core="using:Syncfusion.UI.Xaml.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:treeGridFiltering="using:Syncfusion.UI.Xaml.TreeGrid.Filtering"
    xmlns:local="using:TreeGrid"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:treeGrid="using:Syncfusion.UI.Xaml.TreeGrid"
    Background="Transparent"
    mc:Ignorable="d">
    <Page.Resources>
        <local:SearchConditionVisibilityConverter x:Key="searchConditionVisibilityConverter" />
        <local:EmployeeViewModel x:Key="employeeViewModel" />
    </Page.Resources>
    <Grid x:Name="grid" DataContext="{StaticResource employeeViewModel}">
        <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto">
            <StackPanel>
                <common:DemoLayout x:Name="Example1" HeaderText="The TreeGrid control provides a built-in delegate filter to achieve view filtering.">
                    <common:DemoLayout.Example>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Column="0"
                        Margin="0,15,30,15"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Orientation="Horizontal">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="0,0,0,5" VerticalAlignment="Center" FontSize="16" FontWeight="Normal" Text="Show rows where :" />
                                    <ComboBox
                                Name="columnComboBox"
                                Width="170"
                                Margin="5,5,5,7"
                                SelectedIndex="0"
                                SelectionChanged="FilterOptionChanged">
                                        <ComboBoxItem>All Columns</ComboBoxItem>
                                        <ComboBoxItem>First Name</ComboBoxItem>
                                        <ComboBoxItem>Last Name</ComboBoxItem>
                                        <ComboBoxItem>Employee ID</ComboBoxItem>
                                        <ComboBoxItem>Department</ComboBoxItem>
                                        <ComboBoxItem>City</ComboBoxItem>
                                        <ComboBoxItem>Salary</ComboBoxItem>
                                    </ComboBox>
                                    <ComboBox
                                x:Name="stringCombo"
                                Width="170"
                                Margin="5,5,5,7"
                                SelectedIndex="0"
                                SelectionChanged="FilterConditionChanged"
                                Visibility="{Binding SelectedIndex, ElementName=columnComboBox, ConverterParameter=StringComboBox, Converter={StaticResource searchConditionVisibilityConverter}}">
                                        <ComboBoxItem>Contains</ComboBoxItem>
                                        <ComboBoxItem>Starts With</ComboBoxItem>
                                        <ComboBoxItem>Ends With</ComboBoxItem>
                                    </ComboBox>
                                    <ComboBox
                                x:Name="numericCombo"
                                Width="170"
                                Margin="5,5,5,7"
                                SelectedIndex="0"
                                SelectionChanged="FilterConditionChanged"
                                Visibility="{Binding SelectedIndex, ElementName=columnComboBox, ConverterParameter=NumericComboBox, Converter={StaticResource searchConditionVisibilityConverter}}">
                                        <ComboBoxItem>Equals</ComboBoxItem>
                                        <ComboBoxItem>Greater Than</ComboBoxItem>
                                        <ComboBoxItem>Less Than</ComboBoxItem>
                                        <ComboBoxItem>Not Equals</ComboBoxItem>
                                    </ComboBox>
                                    <TextBox
                                x:Name="FilterBox"
                                Width="170"
                                Margin="5"
                                VerticalAlignment="Top"
                                TextChanged="FilterBox_TextChanged"
                                />
                                </StackPanel>
                            </StackPanel>
                            <treeGrid:SfTreeGrid Grid.Row="1"
                        x:Name="sfTreeGrid"
                        Height="450"
                        Width="Auto"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        AllowSorting="True"
                        FilterLevel="{Binding Converter={enumextension:StringToEnumValueConverter IsInversed=True, Type=treeGrid:FilterLevel}, Path=SelectedValue, ElementName=filterLevelComboBox}"
                        AutoExpandMode="RootNodesExpanded"
                        AutoGenerateColumns="False"
                        ChildPropertyName="ReportsTo"
                        ColumnWidthMode="Auto"                        
                        ItemsSource="{Binding Employees}"
                        LiveNodeUpdateMode="AllowDataShaping"
                        ParentPropertyName="ID"
                        SelfRelationRootValue="-1">
                                <treeGrid:SfTreeGrid.Columns>
                                    <treeGrid:TreeGridTextColumn HeaderText="First Name" MappingName="FirstName" />
                                    <treeGrid:TreeGridTextColumn HeaderText="Last Name" MappingName="LastName" />
                                    <treeGrid:TreeGridNumericColumn HeaderText="Employee ID" MappingName="ID" />
                                    <treeGrid:TreeGridTextColumn HeaderText="Department" MappingName="Department" />
                                    <treeGrid:TreeGridNumericColumn HeaderText="Salary" MappingName="Salary" 
                                                            DisplayNumberFormat="C2" />
                                    <treeGrid:TreeGridTextColumn HeaderText="City" MappingName="City" />
                                </treeGrid:SfTreeGrid.Columns>
                            </treeGrid:SfTreeGrid>
                        </Grid>
                    </common:DemoLayout.Example>
                    <common:DemoLayout.Options>
                        <StackPanel>
                            <TextBlock Margin="16,5,5,5" FontWeight="Bold" Text="Options" />
                            <ComboBox
                                x:Name="filterLevelComboBox"
                                Width="120"
                                Header="FilterLevel"
                                Margin="16,5,5,5"
                                HorizontalAlignment="Left"
                                ItemsSource="{enumextension:EnumToStringValuesExtension Type=treeGrid:FilterLevel}"
                                SelectedIndex="2">
                            </ComboBox>
                        </StackPanel>
                    </common:DemoLayout.Options>
                    <common:DemoLayout.Xaml>
                        <x:String xml:space="preserve">
&lt;treeGrid:SfTreeGrid Name=&quot;sfTreeGrid&quot;
                               Height=&quot;500&quot;
                               Width=&quot;Auto&quot;
                               HorizontalAlignment=&quot;Left&quot;
                               AllowEditing=&quot;False&quot;
                               AllowSorting=&quot;True&quot;
                               FilterLevel=&quot;$(FilterLevel)&quot;
                               AutoExpandMode=&quot;RootNodesExpanded&quot;
                               AutoGenerateColumns=&quot;True&quot;
                               ChildPropertyName=&quot;ReportsTo&quot;
                               ParentPropertyName=&quot;ID&quot;
                               SelfRelationRootValue=&quot;-1&quot;
                               ColumnWidthMode=&quot;AutoLastColumnFill&quot;
                               ItemsSource=&quot;{Binding Employees}&quot;
                               LiveNodeUpdateMode=&quot;AllowDataShaping&quot;&gt;
&lt;/treeGrid:SfTreeGrid&gt;
                </x:String>
                    </common:DemoLayout.Xaml>
                    <common:DemoLayout.CSharp>
                        <x:String xml:space="preserve">
    // C# Code behind 
    public sealed partial class Filtering : Page
    {
        EmployeeViewModel viewModel;
        public Filtering()
        {
            this.InitializeComponent();
            viewModel = this.grid.DataContext as EmployeeViewModel;
            this.sfTreeGrid.Loaded += SfTreeGrid_Loaded;
        }

        private void SfTreeGrid_Loaded(object sender, RoutedEventArgs e)
        {
            if (viewModel != null)
                viewModel.filterChanged = OnFilterChanged;
        }

        private void OnFilterChanged()
        {
            if (this.sfTreeGrid.View != null)
            {
                this.sfTreeGrid.View.Filter = viewModel.FilerRecords;
                this.sfTreeGrid.View.RefreshFilter();
            }
        }
                        
        private void FilterBox_TextChanged(object sender, TextChangedEventArgs e)
        {
            TextBox textBox = sender as TextBox;
            
            viewModel.FilterText = textBox.Text;
            if (viewModel.filterChanged != null)
                viewModel.filterChanged();
        }
    }                            
      
    public class EmployeeViewModel : INotifyPropertyChanged
    {
        public EmployeeViewModel()
        {         
        }                
        internal delegate void FilterChanged();
        internal FilterChanged filterChanged;
                        
        public bool FilterRecords(object o)
        {
         string filterText = filterTextBox.Text;
         var item = o as Employee;
         if (item != null)
         {
            if (item.EmployeeID.Equals(filterText))
            return true;
         }
         return false;
        }
    }         
                    </x:String>
                    </common:DemoLayout.CSharp>
                    <common:DemoLayout.Substitutions>
                        <common:DemoLayoutSubstitution
                        Key="FilterLevel"
                        SubstitutionValue="{x:Bind sfTreeGrid.FilterLevel, Mode=OneWay}" />
                    </common:DemoLayout.Substitutions>
                </common:DemoLayout>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
