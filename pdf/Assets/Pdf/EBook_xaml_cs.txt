//Create a new PDF document.
PdfDocument pdfDocument = new PdfDocument();
//Add a page to the PDF document
PdfPage pdfPage = pdfDocument.Pages.Add();

//Create bounds to draw a image. 
RectangleF imageRect = new RectangleF(50, 50, 425, 642);
//Get the image file stream from assembly. 
Stream imageStream = GetImageStream("Pdf_Succinctly_img_1.jpg");
//Create new image from stream. 
PdfBitmap image = new PdfBitmap(imageStream);
//Draw image to PDF page. 
page.Graphics.DrawImage(image, imageRect); 

//Add a page to the document.
PdfPage titlePage = document.Pages.Add();
//Create font, string format and text bounds. 
PdfStandardFont times30Font = new PdfStandardFont(PdfFontFamily.TimesRoman, 30);
RectangleF textRect = new RectangleF(0, 60, titlePage.Size.Width, titlePage.Size.Height);
PdfStringFormat format = new PdfStringFormat(PdfTextAlignment.Center);
//Draw a text to PDF page. 
titlePage.Graphics.DrawString("PDF Succinctly", times30Font, PdfBrushes.Black, textRect, format);

//Add new section to PDF document. 
PdfSection section = document.Sections.Add();
//Add a new page to section. 
PdfPage contentPage = section.Pages.Add();
//Add a new text content to PDF page and get layout result. 
PdfLayoutResult result = AddParagraph(page, "Introduction", new RectangleF(20, 25, 495, pageSize.Height));
//Add to table of content and get layout result.
AddTableOfContents(contentPage, "Introduction", new RectangleF(20, 110, 470, result.Page.Size.Height));
//Add bookmark to PDF page. 
AddBookmark(page, "Introduction", result.Bounds.Location, document,null);

RectangleF templateBounds = new Rectangle(0, 0, 515, 50)
//Create a header template and draw a text.
PdfPageTemplateElement headerElement = new PdfPageTemplateElement(templateBounds, contentPage);
//Set transparency to header graphics. 
headerElement.Graphics.SetTransparency(0.6F);
//Create alignment and string format for header content. 
PdfTextAlignment textAlingment = PdfTextAlignment.Right;
PdfVerticalAlignment verticalAlignment = PdfVerticalAlignment.Middle;
format = new PdfStringFormat(textAlingment, verticalAlignment);
PdfStandardFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 10);
//Draw text to header template. 
headerElement.Graphics.DrawString("PDF Succinctly", font, PdfBrushes.Black, templateBounds, format);
//Draw line to header template. 
headerElement.Graphics.DrawLine(PdfPens.Gray, new PointF(0, 49), new PointF(515, 49));
//Set the top page template. 
section.Template.Top = headerElement;

//Create a footer template and draw a text.
PdfPageTemplateElement footerElement = new PdfPageTemplateElement(templateBounds, contentPage);
//Set transparency to header graphics. 
footerElement.Graphics.SetTransparency(0.6F);
//Create new font to draw the content in footer template. 
PdfFont font = new PdfStandardFont(PdfFontFamily.Helvetica, 7);
PdfBrushes blackBrush = PdfBrushes.Black;
//Create page number field.
PdfPageNumberField pageNumber = new PdfPageNumberField(font, blackBrush);
//Create page count field.
PdfPageCountField count = new PdfPageCountField(font, blackBrush);
//Add the fields in composite fields.
PdfCompositeField field = new PdfCompositeField(font, blackBrush, "Page {0} of {1}", pageNumber, count);
field.Bounds = footerElement.Bounds;
//Draw the composite field in footer.
field.Draw(footerElement.Graphics, new PointF(450, 35));
//Set the bottom page template.
section.Template.Bottom = footerElement;

//Creating the stream object.
using (MemoryStream stream = new MemoryStream())
{
    //Save the document into stream.
    document.Save(stream);
    document.Close();

    stream.Position = 0;

    //Save the output stream as a file using file picker.
    PdfUtil.Save("HeadersAndFooters.pdf", stream);
}