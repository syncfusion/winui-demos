//Instantiate the spreadsheet creation engine.
using (ExcelEngine excelEngine = new ExcelEngine())
{
  //Instantiate the excel application object and set DefaultVersion as Xlsx.
  IApplication application = excelEngine.Excel;
  application.DefaultVersion = ExcelVersion.Xlsx;

  Stream input = GetExcelStream("TemplateMarker.xlsx");
  IWorkbook workbook = application.Workbooks.Open(input);
  IWorksheet worksheet1 = workbook.Worksheets[0];
  
  input = GetStream("CLRObjects.xml");
  IList<Customers> list = GetList(input);
              
  //Create Template Marker Processor
  ITemplateMarkersProcessor marker = workbook.CreateTemplateMarkersProcessor();
  marker.AddVariable("Customers", list);

  //Process the markers in the template.
  marker.ApplyMarkers();
              
  //Saving the workbook as stream.
  using(MemoryStream stream = new MemoryStream() )
  workbook.SaveAs(stream);          
}

public IList<Customers> GetList(Stream fileStream)
{
  IList<Customers> lstCustomers = new List<Customers>();
  fileStream.Position = 0;
  StreamReader reader = new StreamReader(fileStream);
  IEnumerable<Customers> customers = GetData<Customers>(reader.ReadToEnd());
  //Get the Path of the Image
  Stream imageStream;
  BinaryReader binaryReader;
  foreach (Customers cust in customers)
  {
    imageStream = GetStream("Template_Marker_Images." + cust.ImageText);
    binaryReader = new BinaryReader(imageStream);
    byte[] hyperlinkImage = binaryReader.ReadBytes((int)imageStream.Length);
    cust.Hyperlink = new Hyperlink("https://help.syncfusion.com/file-formats/xlsio/working-with-template-markers", "", "Hyperlink", "Syncfusion", ExcelHyperLinkType.Url, hyperlinkImage);
    lstCustomers.Add(cust);
    imageStream.Dispose();
  }            
  return lstCustomers;
}

public static IEnumerable<T> GetData<T>(string xml) where T : Customers, new()
{
  return XElement.Parse(xml)
    .Elements("Customers")
    .Select(c => new T
    {
      SalesPerson = (string)c.Element("SalesPerson"),
      SalesJanJune = (int)c.Element("SalesJanJune"),
      SalesJulyDec = (int)c.Element("SalesJulyDec"),
      Change = (int)c.Element("Change"),
      ImageText= (string)c.Element("ImageText")
    });
}