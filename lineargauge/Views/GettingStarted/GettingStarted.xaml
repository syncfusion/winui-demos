<Page x:Class="Syncfusion.LinearGaugeDemos.WinUI.Views.GettingStarted"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d"
      Background="Transparent"
      xmlns:gauge="using:Syncfusion.UI.Xaml.Gauges"
      xmlns:common="using:Syncfusion.DemosCommon.WinUI"
      xmlns:enumextension="using:Syncfusion.DemosCommon.WinUI">

    <StackPanel>
        <common:DemoLayout HeaderText="Linear gauge with the inclusion of axis">
            <common:DemoLayout.Example>
                <Grid VerticalAlignment="Center"
                      Height="250">
                    <gauge:SfLinearGauge x:Name="axisGauge"
                                         Width="550">
                        <gauge:SfLinearGauge.Axis>
                            <gauge:LinearAxis x:Name="axisGaugeAxis"
                                              Interval="10"
                                              Minimum="0"
                                              Maximum="150" />
                        </gauge:SfLinearGauge.Axis>
                    </gauge:SfLinearGauge>
                </Grid>
            </common:DemoLayout.Example>

            <common:DemoLayout.Options>
                <Grid Width="200">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Slider x:Name="minimumSlider"
                            Header="Minimum"
                            Minimum="0"
                            Maximum="150"
                            StepFrequency="1"
                            Value="{Binding ElementName=axisGaugeAxis, Path=Minimum, Mode=TwoWay}" />

                    <Slider x:Name="maximumSlider"
                            Header="Maximum"
                            Grid.Row="1"
                            Minimum="0"
                            Maximum="150"
                            StepFrequency="1"
                            Value="{Binding ElementName=axisGaugeAxis, Path=Maximum, Mode=TwoWay}" />

                    <CheckBox x:Name="showLabelsCheckBox"
                              Content="ShowLabels"
                              Grid.Row="2"
                              IsChecked="{Binding ElementName=axisGaugeAxis, Path=ShowLabels, Mode=TwoWay}" />

                    <ComboBox x:Name="labelPositionComboBox"
                              Margin="0,5,0,0"
                              Header="LabelPosition"
                              Grid.Row="3"
                              ItemsSource="{enumextension:EnumToStringValuesExtension Type=gauge:GaugeLabelsPosition}"
                              SelectedItem="{Binding Converter={enumextension:StringToEnumValueConverter Type=gauge:GaugeLabelsPosition}, ElementName=axisGaugeAxis, Path=LabelPosition, Mode=TwoWay}"
                              HorizontalAlignment="Stretch">
                    </ComboBox>

                    <CheckBox x:Name="showTicksCheckBox"
                              Margin="0,5,0,0"
                              Content="ShowTicks"
                              Grid.Row="4"
                              IsChecked="{Binding ElementName=axisGaugeAxis, Path=ShowTicks, Mode=TwoWay}" />

                    <ComboBox x:Name="tickPositionComboBox"
                              Margin="0,5,0,0"
                              Header="TickPosition"
                              Grid.Row="5"
                              ItemsSource="{enumextension:EnumToStringValuesExtension Type=gauge:GaugeElementPosition}"
                              SelectedItem="{Binding Converter={enumextension:StringToEnumValueConverter Type=gauge:GaugeElementPosition}, ElementName=axisGaugeAxis, Path=TickPosition, Mode=TwoWay}"
                              HorizontalAlignment="Stretch">
                    </ComboBox>

                    <CheckBox x:Name="isInversedCheckBox"
                              Margin="0,5,0,0"
                              Content="IsInversed"
                              Grid.Row="6"
                              IsChecked="{Binding ElementName=axisGauge, Path=IsInversed, Mode=TwoWay}" />

                    <CheckBox x:Name="isMirroredCheckBox"
                              Margin="0,5,0,0"
                              Content="IsMirrored"
                              Grid.Row="7"
                              IsChecked="{Binding ElementName=axisGauge, Path=IsMirrored, Mode=TwoWay}" />
                </Grid>
            </common:DemoLayout.Options>

            <common:DemoLayout.Xaml>
                <x:String xml:space="preserve">
&lt;gauge:SfLinearGauge IsInversed="$(isInversedSubstitution)"
                     IsMirrored="$(isMirroredSubstitution)"&gt;
    &lt;gauge:SfLinearGauge.Axis&gt;
        &lt;gauge:LinearAxis Minimum="$(minimumSubstitution)"
                          Maximum="$(maximumSubstitution)"
                          LabelPosition="$(labelPositionSubstitution)"
                          TickPosition="$(tickPositionSubstitution)"
                          ShowLabels="$(showLabelsSubstitution)"
                          ShowTicks="$(showTicksSubstitution)" /&gt;
    &lt;/gauge:SfLinearGauge.Axis&gt;
&lt;/gauge:SfLinearGauge&gt;
                        </x:String>
            </common:DemoLayout.Xaml>

            <common:DemoLayout.Substitutions>
                <common:DemoLayoutSubstitution Key="minimumSubstitution"
                                               SubstitutionValue="{x:Bind axisGaugeAxis.Minimum, Mode=OneWay}" />
                <common:DemoLayoutSubstitution Key="maximumSubstitution"
                                               SubstitutionValue="{x:Bind axisGaugeAxis.Maximum, Mode=OneWay}" />
                <common:DemoLayoutSubstitution Key="labelPositionSubstitution"
                                               SubstitutionValue="{x:Bind axisGaugeAxis.LabelPosition, Mode=OneWay}" />
                <common:DemoLayoutSubstitution Key="tickPositionSubstitution"
                                               SubstitutionValue="{x:Bind axisGaugeAxis.TickPosition, Mode=OneWay}" />
                <common:DemoLayoutSubstitution Key="showLabelsSubstitution"
                                               SubstitutionValue="{x:Bind axisGaugeAxis.ShowLabels, Mode=OneWay}" />
                <common:DemoLayoutSubstitution Key="showTicksSubstitution"
                                               SubstitutionValue="{x:Bind axisGaugeAxis.ShowTicks, Mode=OneWay}" />
                <common:DemoLayoutSubstitution Key="isInversedSubstitution"
                                               SubstitutionValue="{x:Bind axisGauge.IsInversed, Mode=OneWay}" />
                <common:DemoLayoutSubstitution Key="isMirroredSubstitution"
                                               SubstitutionValue="{x:Bind axisGauge.IsMirrored, Mode=OneWay}" />
            </common:DemoLayout.Substitutions>
        </common:DemoLayout>

        <common:DemoLayout HeaderText="Linear gauge with the inclusion of range">
            <common:DemoLayout.Example>
                <Grid VerticalAlignment="Center"
                      Height="250">
                    <gauge:SfLinearGauge x:Name="gaugeWithRange"
                                         Width="550">
                        <gauge:SfLinearGauge.Axis>
                            <gauge:LinearAxis Maximum="150"
                                              Interval="10"
                                              AxisLineStrokeThickness="8">
                                <gauge:LinearAxis.Ranges>
                                    <gauge:LinearGaugeRange x:Name="range1"
                                                            StartValue="0"
                                                            EndValue="50"
                                                            Background="Red" />
                                    <gauge:LinearGaugeRange x:Name="range2"
                                                            StartValue="50"
                                                            EndValue="100"
                                                            Background="Orange" />
                                    <gauge:LinearGaugeRange x:Name="range3"
                                                            StartValue="100"
                                                            EndValue="150"
                                                            Background="Green" />
                                </gauge:LinearAxis.Ranges>
                            </gauge:LinearAxis>
                        </gauge:SfLinearGauge.Axis>
                    </gauge:SfLinearGauge>
                </Grid>
            </common:DemoLayout.Example>
            <common:DemoLayout.Options>
                <Grid Width="200">
                    <Grid.Resources>
                        <Style TargetType="ColorPicker">
                            <Setter Property="Height"
                                    Value="50" />
                            <Setter Property="IsHexInputVisible"
                                    Value="False" />
                            <Setter Property="IsAlphaSliderVisible"
                                    Value="False" />
                            <Setter Property="IsAlphaTextInputVisible"
                                    Value="False" />
                            <Setter Property="IsColorPreviewVisible"
                                    Value="False" />
                            <Setter Property="IsColorChannelTextInputVisible"
                                    Value="False" />
                            <Setter Property="IsColorSliderVisible"
                                    Value="False" />
                            <Setter Property="IsColorSpectrumVisible"
                                    Value="True" />
                            <Setter Property="IsMoreButtonVisible"
                                    Value="False" />
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Text="1st range background" />
                    <ColorPicker x:Name="range1ColorPicker"
                                 Grid.Row="1"
                                 Color="{Binding ElementName=range1, Path=Background.Color, Mode=TwoWay}" />

                    <TextBlock Text="2nd range background"
                               Grid.Row="2" />
                    <ColorPicker x:Name="range2ColorPicker"
                                 Grid.Row="3"
                                 Color="{Binding ElementName=range2, Path=Background.Color, Mode=TwoWay}" />

                    <TextBlock Text="3rd range background"
                               Grid.Row="4" />
                    <ColorPicker x:Name="range3ColorPicker"
                                 Grid.Row="5"
                                 Color="{Binding ElementName=range3, Path=Background.Color, Mode=TwoWay}" />
                </Grid>
            </common:DemoLayout.Options>

            <common:DemoLayout.Xaml>
                <x:String xml:space="preserve">
&lt;gauge:LinearGaugeRange x:Name="range1"
                        StartValue="0"
                        EndValue="50"
                        Background="$(linearGaugeRange1Background)" /&gt;
&lt;gauge:LinearGaugeRange x:Name="range2"
                        StartValue="50"
                        EndValue="100"
                        Background="$(linearGaugeRange2Background)" /&gt;
&lt;gauge:LinearGaugeRange x:Name="range3"
                        StartValue="100"
                        EndValue="150"
                        Background="$(linearGaugeRange3Background)" /&gt;
                    </x:String>
            </common:DemoLayout.Xaml>

            <common:DemoLayout.Substitutions>
                <common:DemoLayoutSubstitution Key="linearGaugeRange1Background"
                                               SubstitutionValue="{x:Bind range1ColorPicker.Color, Mode=OneWay}" />
                <common:DemoLayoutSubstitution Key="linearGaugeRange2Background"
                                               SubstitutionValue="{x:Bind range2ColorPicker.Color, Mode=OneWay}" />
                <common:DemoLayoutSubstitution Key="linearGaugeRange3Background"
                                               SubstitutionValue="{x:Bind range3ColorPicker.Color, Mode=OneWay}" />
            </common:DemoLayout.Substitutions>
        </common:DemoLayout>

        <common:DemoLayout HeaderText="Linear gauge with the inclusion of bar pointer">
            <common:DemoLayout.Example>
                <Grid VerticalAlignment="Center"
                      Height="250">
                    <gauge:SfLinearGauge x:Name="gaugeWithBarPointer"
                                         Width="550">
                        <gauge:SfLinearGauge.Axis>
                            <gauge:LinearAxis Maximum="150"
                                              Interval="10"
                                              AxisLineStrokeThickness="8">

                                <gauge:LinearAxis.Ranges>
                                    <gauge:LinearGaugeRange StartValue="0"
                                                            EndValue="50"
                                                            Background="Red" />
                                    <gauge:LinearGaugeRange StartValue="50"
                                                            EndValue="100"
                                                            Background="Orange" />
                                    <gauge:LinearGaugeRange StartValue="100"
                                                            EndValue="150"
                                                            Background="Green" />
                                </gauge:LinearAxis.Ranges>

                                <gauge:LinearAxis.BarPointers>
                                    <gauge:BarPointer x:Name="barPointer"
                                                      Value="90"
                                                      EnableAnimation="True" />
                                </gauge:LinearAxis.BarPointers>
                            </gauge:LinearAxis>
                        </gauge:SfLinearGauge.Axis>
                    </gauge:SfLinearGauge>
                </Grid>
            </common:DemoLayout.Example>

            <common:DemoLayout.Options>
                <Grid Width="200">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Slider Header="Value"
                            Minimum="0"
                            Maximum="150"
                            Value="{Binding ElementName=barPointer, Path=Value, Mode=TwoWay}"></Slider>
                </Grid>
            </common:DemoLayout.Options>

            <common:DemoLayout.Xaml>
                <x:String xml:space="preserve">
&lt;gauge:RadialAxis.BarPointers>
    &lt;gauge:BarPointer x:Name="barPointer"
                      Value="$(gettingStartedBarPointerValue)"
                      EnableAnimation="True" /&gt;
&lt;/gauge:RadialAxis.BarPointers&gt;
                    </x:String>
            </common:DemoLayout.Xaml>

            <common:DemoLayout.Substitutions>
                <common:DemoLayoutSubstitution Key="gettingStartedBarPointerValue"
                                               SubstitutionValue="{x:Bind barPointer.Value, Mode=OneWay}" />
            </common:DemoLayout.Substitutions>
        </common:DemoLayout>

        <common:DemoLayout HeaderText="Linear gauge with the inclusion of shape pointer">
            <common:DemoLayout.Example>
                <Grid VerticalAlignment="Center"
                      Height="250">
                    <gauge:SfLinearGauge x:Name="gaugeWithShapePointer"
                                         Width="550">
                        <gauge:SfLinearGauge.Axis>
                            <gauge:LinearAxis Maximum="150"
                                              Interval="10"
                                              AxisLineStrokeThickness="8">

                                <gauge:LinearAxis.Ranges>
                                    <gauge:LinearGaugeRange StartValue="0"
                                                            EndValue="50"
                                                            Background="Red" />
                                    <gauge:LinearGaugeRange StartValue="50"
                                                            EndValue="100"
                                                            Background="Orange" />
                                    <gauge:LinearGaugeRange StartValue="100"
                                                            EndValue="150"
                                                            Background="Green" />
                                </gauge:LinearAxis.Ranges>

                                <gauge:LinearAxis.BarPointers>
                                    <gauge:BarPointer Value="90"
                                                      EnableAnimation="True" />
                                </gauge:LinearAxis.BarPointers>

                                <gauge:LinearAxis.MarkerPointers>
                                    <gauge:LinearShapePointer x:Name="shapePointer"
                                                        Value="90"
                                                        VerticalAnchor="End"
                                                        OffsetPoint="0,-8"
                                                        EnableAnimation="True" />
                                </gauge:LinearAxis.MarkerPointers>
                            </gauge:LinearAxis>
                        </gauge:SfLinearGauge.Axis>
                    </gauge:SfLinearGauge>
                </Grid>
            </common:DemoLayout.Example>

            <common:DemoLayout.Options>
                <Grid Width="200">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Slider Header="Value"
                            Minimum="0"
                            Maximum="150"
                            Value="{Binding ElementName=shapePointer, Path=Value, Mode=TwoWay}"></Slider>
                </Grid>
            </common:DemoLayout.Options>

            <common:DemoLayout.Xaml>
                <x:String xml:space="preserve">
&lt;gauge:RadialAxis.MarkerPointers>
    &lt;gauge:LinearShapePointer x:Name="shapePointer"
                        Value="$(gaugeWithShapePointerShapePointerValue)"
                        VerticalAnchor="End"
                        OffsetPoint="0,-8"
                        EnableAnimation="True" /&gt;
&lt;/gauge:RadialAxis.MarkerPointers&gt;
                    </x:String>
            </common:DemoLayout.Xaml>

            <common:DemoLayout.Substitutions>
                <common:DemoLayoutSubstitution Key="gaugeWithShapePointerShapePointerValue"
                                               SubstitutionValue="{x:Bind shapePointer.Value, Mode=OneWay}" />
            </common:DemoLayout.Substitutions>
        </common:DemoLayout>

        <common:DemoLayout HeaderText="Linear gauge with the inclusion of content pointer">
            <common:DemoLayout.Example>
                <Grid VerticalAlignment="Center"
                      Height="250">
                    <gauge:SfLinearGauge x:Name="gaugeWithContentPointer"
                                         Width="550">
                        <gauge:SfLinearGauge.Axis>
                            <gauge:LinearAxis Maximum="150"
                                              Interval="10"
                                              AxisLineStrokeThickness="8">

                                <gauge:LinearAxis.Ranges>
                                    <gauge:LinearGaugeRange StartValue="0"
                                                            EndValue="50"
                                                            Background="Red"/>
                                    <gauge:LinearGaugeRange StartValue="50"
                                                            EndValue="100"
                                                            Background="Orange" />
                                    <gauge:LinearGaugeRange StartValue="100"
                                                            EndValue="150"
                                                            Background="Green" />
                                </gauge:LinearAxis.Ranges>

                                <gauge:LinearAxis.BarPointers>
                                    <gauge:BarPointer Value="90"
                                                      EnableAnimation="True" />
                                </gauge:LinearAxis.BarPointers>

                                <gauge:LinearAxis.MarkerPointers>
                                    <gauge:LinearShapePointer x:Name="contentShapePointer"
                                                        Value="90"
                                                        VerticalAnchor="End"
                                                        OffsetPoint="0,-8"
                                                        EnableAnimation="True" />

                                    <gauge:LinearContentPointer x:Name="contentPointer"
                                                          Value="{Binding ElementName=contentShapePointer, Path=Value, Mode=OneWay}"
                                                          EnableAnimation="True"
                                                          VerticalAnchor="End"
                                                          OffsetPoint="0,-28">
                                        <gauge:LinearContentPointer.Content>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding ElementName=contentPointer, Path=Value, Mode=OneWay}"
                                                           FontFamily="{ThemeResource ContentControlThemeFontFamily}"
                                                           FontSize="12" />
                                                <TextBlock Text="%"
                                                           FontFamily="{ThemeResource ContentControlThemeFontFamily}"
                                                           FontSize="12" />
                                            </StackPanel>
                                        </gauge:LinearContentPointer.Content>
                                    </gauge:LinearContentPointer>
                                </gauge:LinearAxis.MarkerPointers>
                            </gauge:LinearAxis>
                        </gauge:SfLinearGauge.Axis>
                    </gauge:SfLinearGauge>
                </Grid>
            </common:DemoLayout.Example>

            <common:DemoLayout.Options>
                <Grid Width="200">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Slider Header="Value"
                            Minimum="0"
                            Maximum="150"
                            Value="{Binding ElementName=contentShapePointer, Path=Value, Mode=TwoWay}"></Slider>
                </Grid>
            </common:DemoLayout.Options>

            <common:DemoLayout.Xaml>
                <x:String xml:space="preserve">
&lt;gauge:RadialAxis.MarkerPointers>
    &lt;gauge:LinearContentPointer x:Name="contentPointer"
                          Value="$(contentPointerValue)"
                          EnableAnimation="True"
                          VerticalAnchor="End"
                          OffsetPoint="0,-28"&gt;
        &lt;gauge:LinearContentPointer.Content>
            &lt;StackPanel Orientation="Horizontal">
                &lt;TextBlock Text="{Binding ElementName=contentPointer, Path=Value, Mode=OneWay}" />
                &lt;TextBlock Text="%" />
            &lt;/StackPanel>
        &lt;/gauge:LinearContentPointer.Content>
    &lt;/gauge:LinearContentPointer>
&lt;/gauge:RadialAxis.MarkerPointers&gt;
                    </x:String>
            </common:DemoLayout.Xaml>

            <common:DemoLayout.Substitutions>
                <common:DemoLayoutSubstitution Key="contentPointerValue"
                                               SubstitutionValue="{x:Bind contentPointer.Value, Mode=OneWay}" />
            </common:DemoLayout.Substitutions>
        </common:DemoLayout>
    </StackPanel>
</Page>