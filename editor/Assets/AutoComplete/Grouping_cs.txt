public class CustomGroupFilter : IAutoCompleteFilterBehavior
{
    public async Task<object> GetMatchingItemsAsync(SfAutoComplete source, AutoCompleteFilterInfo filterInfo)
    {
         List<ContinentInfo> list = new List<ContinentInfo>();
        IEnumerable itemsSource = source.ItemsSource as IEnumerable;

         list.AddRange(from item in itemsSource.Cast<ContinentInfo>()
                      let filteritem = this.GetStringFromMemberPath(item, nameof(item.Country))
                      where filteritem.Contains(filterInfo.Text, StringComparison.CurrentCultureIgnoreCase)
                      select item);

        var collectionViewSource = new CollectionViewSource();
        collectionViewSource.Source = list.GroupBy(item => item.Continent);
        collectionViewSource.IsSourceGrouped = true;

        return await Task.FromResult(collectionViewSource.View);
    }        

    private string GetStringFromMemberPath(object item, string path)
    {
        string value = item.ToString();
        if (!string.IsNullOrEmpty(path))
        {
           value = item.GetType()?.GetRuntimeProperty(path)?.GetValue(item).ToString();
        }

        return value;
    }
}